version: '3.8'

services:
  # Unstable API (from the provided repository)
  weakapp:
    image: nantonov/weakapp:latest
    ports:
      - "5000:5000"
    networks:
      - data-ingestor-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # RabbitMQ message queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - data-ingestor-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: dataingestor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - data-ingestor-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Data Ingestor Service
  data-ingestor:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      weakapp:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - data-ingestor-network
    environment:
      - CONFIG_PATH=/root/config.yaml
    volumes:
      - ./config.yaml:/root/config.yaml:ro
    restart: unless-stopped

volumes:
  rabbitmq_data:
  postgres_data:

networks:
  data-ingestor-network:
    driver: bridge


